{"version":3,"sources":["core/reducer.js","core/StateProvider.js","styles/NavBarStyles.js","core/Pagination.js","assets/Logo.png","components/NavBar.js","styles/characterStyle.js","components/characters.js","assets/RyM.png","styles/episodeStyles.js","components/episode.js","assets/RyMDos.jpg","styles/locationsStyles.js","components/location.js","styles/compareStyle.js","components/compare.js","styles/episodeDetalleStyle.js","core/apiCall.js","components/episodeDetalle.js","assets/homeTitle.png","components/home.js","core/snackbar.js","App.js","index.js"],"names":["actionTypes","reducer","state","action","console","log","type","pageNumber","totalPages","typeData","character","apiData","location","episode","search","compare","compareResults","episodeID","snackbar","StateContext","createContext","StateProvider","initialState","children","Provider","value","useReducer","useStateValue","useContext","Search","styled","theme","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginLeft","width","SearchIconWrapper","padding","spacing","height","pointerEvents","display","alignItems","justifyContent","StyledInputBase","InputBase","color","paddingLeft","transition","transitions","create","PaginationControl","dispatch","Pagination","count","page","onChange","event","size","style","pages","NavBar","React","useState","anchorElNav","setAnchorElNav","setTimeout","document","getElementById","charAt","toUpperCase","slice","classList","add","buttonSelected","querySelectorAll","selectTypeData","target","textContent","toLowerCase","useEffect","forEach","btn","id","toLocaleLowerCase","remove","AppBar","Container","maxWidth","Toolbar","disableGutters","Box","sx","flexGrow","xs","md","IconButton","onClick","currentTarget","Menu","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","MenuItem","className","Typography","textAlign","map","length","sm","char","backgroundImage","image","Grid","item","left","top","zIndex","cursor","src","logo","alt","flexDirection","Button","name","marginRight","fontSize","fontFamily","my","placeholder","inputProps","onKeyUp","useStyles","makeStyles","root","content","title","data","paddingBottom","actions","Character","classes","bullet","container","Card","backgroundSize","CardActions","e","selected","contains","removeChar","filter","addChar","push","view","message","success","compareCharacter","bottom","status","gender","variant","component","episodeRandom","pos","marginBottom","back","backgroundPosition","opacity","Episode","lg","CardContent","air_date","marginTop","Locations","dimension","residents","moment","created","format","header","titleContainer","Compare","compareEpisodes","charA","charB","sharedEpisode","comparewith","repeatEpisode","compareB","repeat","flat","index","characters","flexWrap","list","margin","overflow","listText","listImage","apiCall","a","axios","get","episodeData","episodeInfo","searchApi","queryResult","episodeSelected","episodeCharacters","EpisodeDetalle","setEpisodeSelected","setEpisodeCharacters","episodeNumber","getEpisode","then","response","Number","split","getEpisodeCharacters","join","Home","Logo","Snack","icon","MySnackbar","Snackbar","fontWeight","lineHeight","letterSpacing","handleClose","autoHideDuration","App","querySearch","selectDispatch","getData","info","dataCharacter","result","randomEpisode","Math","floor","random","randomResult","getRandomEpisode","results","ReactDOM","render"],"mappings":"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","file":"static/js/main.005e8010.chunk.js","sourcesContent":["export const initialState = {\r\n    pageNumber: 1,\r\n    totalPages: 0,\r\n    typeData: \"home\",\r\n    apiData: [],\r\n    character: [],\r\n    location: [],\r\n    episode: [],\r\n    search: \"\",\r\n    compare: [],\r\n    compareResults: [],\r\n    episodeID: 1,\r\n    snackbar: {\r\n        view: false,\r\n        message: '',\r\n        success: false\r\n    },\r\n}\r\n\r\nexport const actionTypes = {\r\n    PAGE_NUMBER: \"PAGE_NUMBER\",\r\n    TOTAL_PAGE: \"TOTAL_PAGE\",\r\n    TYPE: \"TYPE\",\r\n    CHARACTER: \"CHARACTER\",\r\n    LOCATION: \"LOCATION\",\r\n    EPISODE: \"EPISODE\",\r\n    SEARCH: \"SEARCH\",\r\n    COMPARE: \"COMPARE\",\r\n    COMPARE_RESULT: \"COMPARE_RESULT\",\r\n    EPISODEID: \"EPISODEID\",\r\n    SNACKBAR: \"SNACKBAR\",\r\n\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n\r\n    console.log(action);\r\n\r\n    switch (action.type) {\r\n\r\n        case \"PAGE_NUMBER\":\r\n            return {\r\n                ...state,\r\n                pageNumber: action.pageNumber\r\n            }\r\n        case \"TOTAL_PAGE\":\r\n            return {\r\n                ...state,\r\n                totalPages: action.totalPages,\r\n            }\r\n        case \"TYPE\":\r\n            return {\r\n                ...state,\r\n                typeData: action.typeData,\r\n            }\r\n        case \"CHARACTER\":\r\n            return {\r\n                ...state,\r\n                character: action.apiData,\r\n            }\r\n        case \"LOCATION\":\r\n            return {\r\n                ...state,\r\n                location: action.apiData,\r\n            }\r\n        case \"EPISODE\":\r\n            return {\r\n                ...state,\r\n                episode: action.apiData,\r\n            }\r\n        case \"SEARCH\":\r\n            return {\r\n                ...state,\r\n                search: action.apiData,\r\n            }\r\n        case \"COMPARE\":\r\n            return {\r\n                ...state,\r\n                compare: action.compare,\r\n            }\r\n        case \"COMPARE_RESULT\":\r\n            return {\r\n                ...state,\r\n                compareResults: action.compareResults,\r\n            }\r\n        case \"EPISODEID\":\r\n            return {\r\n                ...state,\r\n                episodeID: action.episodeID,\r\n            }\r\n        case \"SNACKBAR\":\r\n            return {\r\n                ...state,\r\n                snackbar: action.snackbar,\r\n            }\r\n        default: return state;\r\n    }\r\n}\r\nexport default reducer","import { createContext, useContext, useReducer } from \"react\"\r\n\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n\r\n    <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n        {children}\r\n    </StateContext.Provider>\r\n\r\n);\r\n\r\nexport const useStateValue = () => useContext(StateContext);","import { styled, alpha } from '@mui/material/styles';\r\nimport InputBase from '@mui/material/InputBase';\r\n\r\nexport const Search = styled('div')(({ theme }) => ({\r\n  position: 'relative',\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n  '&:hover': {\r\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n  },\r\n  marginLeft: 0,\r\n  width: '100%',\r\n\r\n}));\r\n\r\nexport const SearchIconWrapper = styled('div')(({ theme }) => ({\r\n  padding: theme.spacing(0, 2),\r\n  height: '100%',\r\n  position: 'absolute',\r\n  pointerEvents: 'none',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n}));\r\n\r\nexport const StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  color: 'inherit',\r\n  '& .MuiInputBase-input': {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n\r\n  },\r\n}));\r\n","import React from 'react';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport { useStateValue } from './StateProvider';\r\nimport { actionTypes } from './reducer';\r\n\r\nexport default function PaginationControl() {\r\n  const [{ totalPages, pageNumber }, dispatch] = useStateValue()\r\n\r\n  const handleChange = (event, value) => {\r\n    dispatch({\r\n      type: actionTypes.PAGE_NUMBER,\r\n      pageNumber: value\r\n    })\r\n\r\n  };\r\n\r\n  return (\r\n    <div >\r\n\r\n      <Pagination count={totalPages}\r\n        page={pageNumber}\r\n        onChange={handleChange}\r\n        color=\"primary\"\r\n        size='large'\r\n        style={{ width: \"100%\" }} />\r\n\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Logo.f1dc8d48.png\";","import React, { useEffect } from 'react';\r\nimport { Search, SearchIconWrapper, StyledInputBase } from '../styles/NavBarStyles'\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Container from '@mui/material/Container';\r\nimport Button from '@mui/material/Button';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { useStateValue } from '../core/StateProvider';\r\nimport { actionTypes } from '../core/reducer';\r\nimport PaginationControl from '../core/Pagination'\r\nimport { Grid } from '@mui/material';\r\nimport logo from '../assets/Logo.png'\r\n\r\n\r\nconst pages = ['Character', 'Location', 'Episode'];\r\n\r\nconst NavBar = () => {\r\n\r\n  const [{ typeData, compare }, dispatch] = useStateValue()\r\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\r\n  if (typeData !== \"compare\" && typeData !== \"detail\") {\r\n    setTimeout(() => {\r\n      document.getElementById(typeData.charAt(0).toUpperCase() + typeData.slice(1)).classList.add(\"typeSelected\")\r\n    }, 1000)\r\n  }\r\n  var buttonSelected = document.querySelectorAll('button[name=\"type\"]')\r\n\r\n  const handleOpenNavMenu = (event) => {\r\n    setAnchorElNav(event.currentTarget);\r\n  };\r\n\r\n  function searchInput(event) {\r\n    let search = event.target.value\r\n    dispatch({\r\n      type: actionTypes.SEARCH,\r\n      apiData: search\r\n    })\r\n    dispatch({\r\n      type: actionTypes.PAGE_NUMBER,\r\n      pageNumber: 1\r\n    })\r\n  }\r\n  function handleClose() {\r\n    setAnchorElNav(null);\r\n  }\r\n\r\n  const selectTypeData = (page) => {\r\n\r\n    dispatch({\r\n      type: actionTypes.TYPE,\r\n      typeData: page.target.textContent.toLowerCase()\r\n    })\r\n    dispatch({\r\n      type: actionTypes.PAGE_NUMBER,\r\n      pageNumber: 1\r\n    })\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      buttonSelected.forEach(btn => {\r\n        btn.id.toLocaleLowerCase() !== typeData ?\r\n          btn.classList.remove(\"typeSelected\") :\r\n          btn.classList.add(\"typeSelected\")\r\n      })\r\n    }, 300)\r\n    // eslint-disable-next-line\r\n  }, [typeData])\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Container maxWidth=\"xl\">\r\n        <Toolbar disableGutters>\r\n          <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls=\"menu-appbar\"\r\n              aria-haspopup=\"true\"\r\n              onClick={handleOpenNavMenu}\r\n              style={{ color: \"rgb(198, 158, 235)\" }}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Menu\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorElNav}\r\n              anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'left',\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'left',\r\n              }}\r\n              open={Boolean(anchorElNav)}\r\n              onClose={handleClose}\r\n              sx={{\r\n                display: { xs: 'block', md: 'none' }\r\n              }}\r\n            >\r\n              <MenuItem key=\"home\" onClick={() => dispatch({\r\n                type: actionTypes.TYPE,\r\n                typeData: \"home\"\r\n              })}\r\n                className=\"menuResponsive\" >\r\n                <Typography textAlign=\"center\">Home</Typography>\r\n              </MenuItem>\r\n              {pages.map((page) => (\r\n                <MenuItem key={page} onClick={selectTypeData} className=\"menuResponsive\" >\r\n                  <Typography textAlign=\"center\">{page}</Typography>\r\n                </MenuItem>\r\n              ))}\r\n              {compare.length > 0 &&\r\n                <MenuItem key=\"compare\"\r\n                  onClick={() => dispatch({\r\n                    type: actionTypes.TYPE,\r\n                    typeData: \"compare\"\r\n                  })}\r\n                  sx={{ display: { xs: 'flex', sm: 'none', md: \"none\" } }} className='compareResponsive'>\r\n                  {compare?.map(char =>\r\n                    <div className='imgCharResponsive' key={char.id} style={{ backgroundImage: \"url(\" + char.image + \")\" }} />\r\n                  )}\r\n\r\n                </MenuItem>\r\n              }\r\n            </Menu>\r\n          </Box>\r\n\r\n          <Grid item md={3} sx={{ display: { xs: 'none', md: 'block' } }}>\r\n            <div onClick={() =>\r\n              dispatch({\r\n                type: actionTypes.TYPE,\r\n                typeData: \"home\"\r\n              })}\r\n              style={{ position: \"absolute\", left: \"-26px\", top: \"3px\", height: \"135px\", width: \"135px\", zIndex: 3, cursor: \"pointer\" }}>\r\n              <img src={logo} style={{ height: \"100%\" }} alt=\"logo rick y morty\" />\r\n            </div>\r\n          </Grid>\r\n          <Grid sx={{ display: { sx: 'none', md: 'flex', width: \"100%\", flexDirection: \"row\", justifyContent: \"center\" } }} item md={6} >\r\n            <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex', width: \"100%\", flexDirection: \"row\", justifyContent: \"center\" } }}\r\n            >\r\n              {pages.map((page) => (\r\n                <Button\r\n                  className='btnNav'\r\n                  key={page}\r\n                  id={page}\r\n                  name=\"type\"\r\n                  onClick={selectTypeData}\r\n                  style={{ marginRight: \"10px\", fontSize: \"1.2rem\", fontFamily: \"Comic Sans MS\", color: \"white\" }}\r\n                  sx={{ my: 2, color: 'white', display: 'block' }}\r\n                >\r\n                  {page}\r\n                </Button>\r\n              ))}\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={9} md={3} >\r\n            {typeData !== \"detail\" && typeData !== \"compare\" && <Search>\r\n              <SearchIconWrapper>\r\n                <SearchIcon />\r\n              </SearchIconWrapper>\r\n              <StyledInputBase\r\n                placeholder=\"Search…\"\r\n                inputProps={{ 'aria-label': 'search' }}\r\n                onKeyUp={searchInput}\r\n              />\r\n            </Search>}\r\n          </Grid>\r\n        </Toolbar>\r\n      </Container>\r\n      <Box sx={{ display: { sm: 'block', md: \"flex\" } }} className='pagination'>\r\n\r\n        {\r\n          typeData === \"compare\" ?\r\n            <h1 className=\"subtitleNavBar \">Comparing characters</h1> :\r\n            typeData === \"detail\" ?\r\n              <h1 className=\"subtitleNavBar \">Episode details</h1> :\r\n              <PaginationControl />\r\n        }\r\n\r\n        <Box onClick={() => dispatch({\r\n          type: actionTypes.TYPE,\r\n          typeData: \"compare\"\r\n        })}\r\n          sx={{ display: { xs: 'none', sm: 'flex' } }} className='compare'>\r\n          {compare?.map(char =>\r\n            <div className='imgChar' key={char.id} style={{ backgroundImage: \"url(\" + char.image + \")\" }} />\r\n          )}\r\n        </Box>\r\n      </Box>\r\n    </AppBar>\r\n  );\r\n};\r\nexport default NavBar;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    display: \"flex\",\r\n    flexDirection: 'row',\r\n    height: 250\r\n  },\r\n  image: {\r\n    width: \"40%\",\r\n  },\r\n  content: {\r\n    width: '60%',\r\n    padding: \"8px\"\r\n  },\r\n  title: {\r\n    width: \"100%\",\r\n    fontSize: \"30px\",\r\n    color: \"blueviolet\",\r\n    textAlign: \"center\",\r\n    fontFamily: \"Comic Sans MS\"\r\n  },\r\n  data: {\r\n    fontSize: \"20px\",\r\n    paddingBottom: \"8px\"\r\n  },\r\n  actions: {\r\n    padding: 0\r\n  }\r\n\r\n}));","import React, { useEffect } from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { actionTypes } from '../core/reducer';\r\nimport { useStateValue } from '../core/StateProvider';\r\nimport CircleSharpIcon from '@mui/icons-material/CircleSharp';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useStyles } from '../styles/characterStyle';\r\n\r\nexport default function Character() {\r\n  const [{ character, compare }, dispatch] = useStateValue()\r\n\r\n  const classes = useStyles();\r\n\r\n  function bullet(data) {\r\n    if (data === \"Alive\") {\r\n      return <span style={{ color: \"green\", fontSize: \"20px\" }}><CircleSharpIcon fontSize='small' /></span>;\r\n    } else if (data === \"Dead\") {\r\n      return <span style={{ color: \"red\", fontSize: \"20px\" }}><CircleSharpIcon fontSize='small' /></span>;\r\n    } else { return <span style={{ color: \"grey\", fontSize: \"20px\" }}><CircleSharpIcon fontSize='small' /></span>; }\r\n  }\r\n\r\n  function compareCharacter(data, event) {\r\n    var selected = event.currentTarget\r\n\r\n    if (selected.classList.contains(\"removeBtn\")) {\r\n      var removeChar = compare.filter(char => char.id !== data.id)\r\n      selected.classList.remove(\"removeBtn\")\r\n      selected.textContent = \"COMPARE CHARACTER\"\r\n\r\n      dispatch({\r\n        type: actionTypes.COMPARE,\r\n        compare: removeChar\r\n      })\r\n    } else if (compare.length < 3) {\r\n      var addChar = compare\r\n      addChar.push(data)\r\n      selected.classList.add(\"removeBtn\")\r\n      selected.textContent = \"NOT COMPARE CHARACTER\"\r\n      dispatch({\r\n        type: actionTypes.COMPARE,\r\n        compare: addChar\r\n      })\r\n    }\r\n    else {\r\n      dispatch({\r\n        type: actionTypes.SNACKBAR,\r\n        snackbar: {\r\n          view: true,\r\n          message: \"You can compare more than 3 characters\",\r\n          success: false\r\n        },\r\n      });\r\n    }\r\n  }\r\n  useEffect(() => {\r\n\r\n    compare.map(char =>\r\n      document.querySelectorAll(`button[id=\"btnCompare${char.id}\"]`)\r\n        .forEach(btn => {\r\n          btn.classList.add(\"removeBtn\")\r\n          btn.textContent = \"NOT COMPARE CHARACTER\"\r\n\r\n        })\r\n    )\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <Grid container spacing={3} style={{ padding: 19 }}>\r\n      {character.map(data =>\r\n\r\n        <Grid item xs={12} md={6} padding={2} key={data.id}>\r\n          <Card className={classes.root} >\r\n            <Box className={classes.image} style={{\r\n              backgroundImage: \"url(\" + data.image + \")\",\r\n              backgroundSize: \"cover\",\r\n              position: \"relative\"\r\n            }}>\r\n              <CardActions className={classes.actions}>\r\n                <Button onClick={(e) => { compareCharacter(data, e) }}\r\n                  name=\"compareBtn\"\r\n                  id={\"btnCompare\" + data.id}\r\n                  style={{\r\n                    backgroundColor: \"blueviolet\",\r\n                    width: \"100%\",\r\n                    height: \"15%\",\r\n                    color: \"white\",\r\n                    position: \"absolute\",\r\n                    bottom: 0,\r\n                    fontFamily: \"Comic Sans MS\",\r\n                    fontSize: \"0.8em\"\r\n                  }}>Compare characters</Button>\r\n              </CardActions>\r\n            </Box>\r\n            <Box className={classes.content}>\r\n              <Typography className={classes.title}>{data.name}</Typography>\r\n\r\n              <Typography style={{ fontSize: \"25px\" }} >{bullet(data.status)} {data.status} - {data.gender}</Typography>\r\n\r\n              <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">Last known location:</Typography>\r\n              <Typography className={classes.data} component=\"p\">{data.location.name}</Typography>\r\n              <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">Zas seen in the episode:</Typography>\r\n              <Typography className={classes.data} component=\"p\">{data.episodeRandom}\r\n\r\n              </Typography>\r\n            </Box>\r\n          </Card>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/RyM.9a975f72.png\";","import { makeStyles } from '@material-ui/core/styles';\r\nimport logo from '../assets/RyM.png'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        height: 400,\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        textAlign: \"center\",\r\n        flexDirection: \"column\"\r\n    },\r\n    title: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        textAlign: \"center\",\r\n        flexDirection: \"column\",\r\n        height: \"50%\",\r\n        position: 'relative',\r\n        zIndex: 1\r\n    },\r\n    pos: {\r\n        padding: 12,\r\n        marginBottom: 12,\r\n        height: \"15%\",\r\n        position: 'relative',\r\n        zIndex: 1\r\n    },\r\n    content: {\r\n        height: \"80%\",\r\n        width: \"100%\",\r\n        position: \"relative\"\r\n    },\r\n    actions: {\r\n        width: \"100%\",\r\n        height: \"20%\",\r\n        padding: 0\r\n    },\r\n    back: {\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0,\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        zIndex: 0,\r\n        backgroundImage: \"url(\" + logo + \")\",\r\n        backgroundPosition: \"center\",\r\n        opacity: 0.3\r\n    }\r\n\r\n});\r\nexport default useStyles;","import React from 'react';\r\nimport useStyles from '../styles/episodeStyles'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useStateValue } from '../core/StateProvider';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { actionTypes } from '../core/reducer';\r\n\r\nexport default function Episode() {\r\n  const [{ episode }, dispatch] = useStateValue()\r\n  const classes = useStyles();\r\n\r\n  function openDetalle(id) {\r\n\r\n    dispatch({\r\n      type: actionTypes.EPISODEID,\r\n      episodeID: id\r\n    });\r\n    dispatch({\r\n      type: actionTypes.TYPE,\r\n      typeData: \"detail\"\r\n    })\r\n\r\n\r\n  }\r\n\r\n  return (\r\n    <Grid container spacing={3} style={{ padding: 19 }}>\r\n      {episode.map(data =>\r\n        <Grid item xs={12} sm={6} md={4} lg={3} padding={2} key={data.id}>\r\n          <Card className={classes.root} variant=\"outlined\">\r\n            <CardContent className={classes.content}>\r\n              <div className={classes.back}></div>\r\n              <div className={classes.title}>\r\n                <Typography variant='h4' style={{ fontFamily: \"Comic Sans MS\", color: \"rgb(61, 6, 112)\" }}>\r\n                  {data.name}\r\n                </Typography>\r\n              </div>\r\n              <Typography className={classes.pos} color=\"textSecondary\">\r\n                {data.air_date}\r\n              </Typography>\r\n              <Typography className={classes.pos} variant=\"h4\" component=\"p\">\r\n                {data.episode}\r\n                <br />\r\n              </Typography>\r\n            </CardContent>\r\n            <CardActions className={classes.actions}>\r\n              <Button style={{\r\n                backgroundColor: \"blueviolet\",\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                color: \"white\",\r\n                fontSize: 30\r\n              }}\r\n                onClick={() => openDetalle(data.id)}\r\n              >+INFO</Button>\r\n            </CardActions>\r\n          </Card>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/RyMDos.380cc344.jpg\";","import { makeStyles } from '@material-ui/core/styles';\r\nimport logo from '../assets/RyMDos.jpg'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        height: 400,\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        textAlign: \"center\",\r\n        flexDirection: \"column\"\r\n    },\r\n    title: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        textAlign: \"center\",\r\n        flexDirection: \"column\",\r\n        height: \"45%\",\r\n        position: 'relative',\r\n        zIndex: 1\r\n\r\n    },\r\n    pos: {\r\n        height: \"15%\",\r\n        position: 'relative',\r\n        zIndex: 1,\r\n        marginTop: 5\r\n    },\r\n    content: {\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        position: \"relative\"\r\n\r\n\r\n    },\r\n    back: {\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0,\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        zIndex: 0,\r\n        backgroundImage: \"url(\" + logo + \")\",\r\n        backgroundPosition: \"center\",\r\n        backgroundSize: \"cover\",\r\n        opacity: 0.3\r\n    }\r\n\r\n})\r\nexport default useStyles","import React from 'react';\r\nimport useStyles from '../styles/locationsStyles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useStateValue } from '../core/StateProvider';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\nimport moment from 'moment';\r\n\r\nexport default function Locations() {\r\n  const [{ location }] = useStateValue()\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container spacing={3} style={{ padding: 19 }}>\r\n      {location.map(data =>\r\n        <Grid item xs={12} sm={6} md={4} lg={3} padding={2} key={data.id}>\r\n          <Card className={classes.root} variant=\"outlined\">\r\n            <CardContent className={classes.content}>\r\n              <div className={classes.back}></div>\r\n              <div className={classes.title}>\r\n                <Typography variant='h4' style={{ fontFamily: \"Comic Sans MS\", color: \"rgb(61, 6, 112)\" }}>\r\n                  {data.name}\r\n                </Typography>\r\n              </div>\r\n              <Typography className={classes.pos} variant=\"h5\" color=\"textSecondary\">\r\n                {data.dimension}\r\n              </Typography>\r\n              <Typography className={classes.pos} variant=\"h4\" component=\"p\">\r\n                {data.type}\r\n                <br />\r\n              </Typography>\r\n              <Typography className={classes.pos} variant=\"h5\" color=\"textSecondary\">\r\n                Residents: {data.residents.length}\r\n              </Typography>\r\n              <Typography className={classes.pos} variant=\"h5\" color=\"textSecondary\">\r\n                Created: {moment(data.created).format('DD/MM/YYYY')}\r\n              </Typography>\r\n            </CardContent>\r\n\r\n          </Card>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n\r\n        width: '100%',\r\n        display: \"flex\",\r\n        flexDirection: 'column',\r\n        height: 500\r\n\r\n    },\r\n    header: {\r\n        height: \"40%\",\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"row\"\r\n    },\r\n    image: {\r\n        width: \"100%\",\r\n        height: \"100%\"\r\n    },\r\n    content: {\r\n        width: '100%',\r\n        height: \"60%\",\r\n        padding: \"8px\"\r\n    },\r\n    titleContainer: {\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    title: {\r\n        width: \"100%\",\r\n        fontSize: \"30px\",\r\n        color: \"blueviolet\",\r\n        textAlign: \"center\",\r\n        fontFamily: \"Comic Sans MS\"\r\n    },\r\n    data: {\r\n        fontSize: \"20px\",\r\n        paddingBottom: \"8px\"\r\n    },\r\n    actions: {\r\n        padding: 0\r\n    }\r\n\r\n}));","import React, { useEffect } from 'react';\r\nimport { useStyles } from '../styles/compareStyle';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useStateValue } from '../core/StateProvider';\r\nimport CircleSharpIcon from '@mui/icons-material/CircleSharp';\r\nimport { actionTypes } from '../core/reducer';\r\n\r\nexport default function Compare() {\r\n    const [{ compare, compareResults }, dispatch] = useStateValue()\r\n\r\n    const compareEpisodes = []\r\n\r\n    function sharedEpisodes() {\r\n\r\n        compare.map(charA =>\r\n            compare.forEach(charB => {\r\n                if (charA.name !== charB.name) {\r\n                    compareEpisodes.push({\r\n                        character: charA.name,\r\n                        sharedEpisode: {\r\n                            comparewith: charB.name,\r\n                            repeatEpisode: charB.episode.map(compareB =>\r\n                                charA.episode.filter(repeat => repeat === compareB)).flat()\r\n                        }\r\n                    }\r\n                    )\r\n                }\r\n            })\r\n        )\r\n\r\n        dispatch({\r\n            type: actionTypes.COMPARE_RESULT,\r\n            compareResults: compareEpisodes\r\n        })\r\n    }\r\n    const classes = useStyles();\r\n\r\n    function bullet(data) {\r\n        if (data === \"Alive\") {\r\n            return <span style={{ color: \"green\", fontSize: \"20px\" }}><CircleSharpIcon fontSize='small' /></span>;\r\n        } else if (data === \"Dead\") {\r\n            return <span style={{ color: \"red\", fontSize: \"20px\" }}><CircleSharpIcon fontSize='small' /></span>;\r\n        } else { return <span style={{ color: \"grey\", fontSize: \"20px\" }}><CircleSharpIcon fontSize='small' /></span>; }\r\n    }\r\n\r\n    useEffect(() => {\r\n        sharedEpisodes()\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    return (\r\n        <Grid container spacing={3} style={{ padding: 19 }}>\r\n            {compare.map(data =>\r\n\r\n                <Grid item xs={12} sm={6} md={4} padding={2} key={data.id}>\r\n                    <Card className={classes.root} >\r\n                        <Box className={classes.header}  >\r\n                            <Box className={classes.image} style={{\r\n                                backgroundImage: \"url(\" + data.image + \")\",\r\n                                backgroundSize: \"cover\",\r\n                                position: \"relative\"\r\n                            }}>\r\n\r\n                            </Box>\r\n                            <Box className={classes.titleContainer}>\r\n                                <Typography className={classes.title}>{data.name}</Typography>\r\n                            </Box>\r\n                        </Box>\r\n                        <Box className={classes.content}>\r\n\r\n                            <Typography style={{ fontSize: \"25px\" }} >{bullet(data.status)} {data.status} - {data.gender}</Typography>\r\n\r\n                            <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">Last known location:</Typography>\r\n                            <Typography className={classes.data} component=\"p\">{data.location.name}</Typography>\r\n                            <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">Was seen in the episode:</Typography>\r\n                            <Typography className={classes.data} component=\"p\">{data.episodeRandom}</Typography>\r\n                            <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">Episodes shared with: </Typography>\r\n                            {compareResults?.map((char, index) =>\r\n                                char.character === data.name &&\r\n                                <Typography key={index} className={classes.data} component=\"p\">\r\n                                    {char.sharedEpisode.comparewith + \" \" + char.sharedEpisode.repeatEpisode.length}\r\n                                </Typography>\r\n                            )}\r\n                        </Box>\r\n                    </Card>\r\n                </Grid>\r\n            )}\r\n        </Grid>\r\n    );\r\n}\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport logo from '../assets/RyM.png'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        height: 400,\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        textAlign: \"center\",\r\n        flexDirection: \"column\"\r\n    },\r\n    title: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        textAlign: \"center\",\r\n        flexDirection: \"column\",\r\n        height: \"50%\",\r\n        position: 'relative',\r\n        zIndex: 1\r\n    },\r\n    pos: {\r\n        padding: 12,\r\n        marginBottom: 12,\r\n        height: \"15%\",\r\n        position: 'relative',\r\n        zIndex: 1\r\n    },\r\n    content: {\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        position: \"relative\"\r\n    },\r\n    actions: {\r\n        width: \"100%\",\r\n        height: \"20%\",\r\n        padding: 0\r\n    },\r\n    back: {\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0,\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        zIndex: 0,\r\n        backgroundImage: \"url(\" + logo + \")\",\r\n        backgroundPosition: \"center\",\r\n        opacity: 0.3\r\n    },\r\n    characters: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        flexWrap: \"wrap\",\r\n        height: \"auto\",\r\n        width: \"100%\"\r\n\r\n    },\r\n    list: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        width: \"95%\",\r\n        height: \"50px\",\r\n        margin: \"5px\",\r\n        borderRadius: \"20px\",\r\n        backgroundColor: \"rgb(198, 158, 235)\",\r\n        overflow: \"hidden\",\r\n    },\r\n    listText: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        width: \"70%\",\r\n        height: \"100%\",\r\n        textAlign: \"center\"\r\n    },\r\n    listImage: {\r\n        width: \"50px\",\r\n        height: \"100%\",\r\n        backgroundSize: \"cover\"\r\n    }\r\n\r\n});\r\nexport default useStyles;","import axios from 'axios';\r\n\r\nexport const apiCall = async (typeData, pageNumber) => {\r\n    try {\r\n        let apiData = await axios.get(`https://rickandmortyapi.com/api/${typeData}/?page=${pageNumber}`)\r\n        return apiData\r\n    }\r\n    catch (error) {\r\n        throw error\r\n    }\r\n}\r\nexport async function episodeData(episode) {\r\n    try {\r\n        let episodeInfo = await axios.get(episode)\r\n        return episodeInfo\r\n    }\r\n    catch (error) {\r\n        throw error\r\n    }\r\n}\r\n\r\nexport async function searchApi(typeData, search, pageNumber) {\r\n    try {\r\n        let queryResult = await axios.get(`https://rickandmortyapi.com/api/${typeData}/?page=${pageNumber}&name=${search}`)\r\n        return queryResult\r\n    }\r\n    catch (error) {\r\n        throw error\r\n    }\r\n}\r\nexport async function getEpisode(id) {\r\n    try {\r\n        let episodeSelected = await axios.get(`https://rickandmortyapi.com/api/episode/${id}`)\r\n        return episodeSelected\r\n    }\r\n    catch (error) {\r\n        throw error\r\n    }\r\n}\r\nexport async function getEpisodeCharacters(characters) {\r\n    console.log()\r\n    try {\r\n        let episodeCharacters = await axios.get(`https://rickandmortyapi.com/api/character/${characters}`)\r\n        return episodeCharacters\r\n    }\r\n    catch (error) {\r\n        throw error\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport useStyles from '../styles/episodeDetalleStyle'\r\nimport Card from '@material-ui/core/Card';\r\nimport Box from '@material-ui/core/Box';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useStateValue } from '../core/StateProvider';\r\nimport { getEpisode, getEpisodeCharacters } from '../core/apiCall';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nexport default function EpisodeDetalle() {\r\n  const [{ episodeID }] = useStateValue()\r\n  const [episodeSelected, setEpisodeSelected] = useState()\r\n  const [episodeCharacters, setEpisodeCharacters] = useState()\r\n\r\n  const classes = useStyles();\r\n  useEffect(() => {\r\n    const episodeNumber = []\r\n\r\n    getEpisode(episodeID)\r\n      .then(response => {\r\n        setEpisodeSelected(response.data)\r\n        response.data.characters.map(character =>\r\n          episodeNumber.push(Number(character.split('/')[5])))\r\n\r\n        getEpisodeCharacters(episodeNumber.join())\r\n          .then(response => setEpisodeCharacters(response.data))\r\n      })\r\n\r\n  }, [episodeID])\r\n\r\n  return (\r\n    <Grid container spacing={3} style={{ padding: 19 }} >\r\n      {episodeSelected &&\r\n\r\n        <Grid item xs={12} sm={6} md={4} lg={3} padding={2} key={episodeSelected.id}>\r\n          <Card className={classes.root} variant=\"outlined\">\r\n            <CardContent className={classes.content}>\r\n              <div className={classes.back}></div>\r\n              <div className={classes.title}>\r\n                <Typography variant='h4' style={{ fontFamily: \"Comic Sans MS\", color: \"rgb(61, 6, 112)\" }}>\r\n                  {episodeSelected.name}\r\n                </Typography>\r\n              </div>\r\n              <Typography className={classes.pos} color=\"textSecondary\">\r\n                {episodeSelected.air_date}\r\n              </Typography>\r\n              <Typography className={classes.pos} variant=\"h4\" component=\"p\">\r\n                {episodeSelected.episode}\r\n                <br />\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      }\r\n      <Grid item xs={12} sm={6} md={8} lg={9} >\r\n        <Card className={classes.characters} >\r\n          {episodeCharacters?.map((character, index) =>\r\n            <Grid item xs={12} sm={12} md={6} lg={4} key={index}>\r\n              <Box className={classes.list}>\r\n                <Box className={classes.listImage} style={{ backgroundImage: \"url(\" + character.image + \")\" }}></Box>\r\n                <Box className={classes.listText}>\r\n                  <Typography component=\"p\" style={{ fontFamily: \"Comic Sans MS\", color: \"rgb(61, 6, 112)\", fontSize: \"1rem\" }}>\r\n                    {character.name}\r\n                    <br />\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n            </Grid>\r\n          )}\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/homeTitle.3bbcddb8.png\";","import React from \"react\";\r\nimport Logo from \"../assets/homeTitle.png\"\r\nimport '../styles/cards.css'\r\nimport { useStateValue } from '../core/StateProvider';\r\nimport { actionTypes } from '../core/reducer';\r\n\r\nfunction Home() {\r\n    // eslint-disable-next-line\r\n    const [{ typeData }, dispatch] = useStateValue()\r\n    return (\r\n        <div className=\"home\" >\r\n            <div className=\"homeTitle\"  >\r\n                <img src={Logo} style={{ width: \"80%\" }} alt=\"logo Rick y Morty\" />\r\n            </div>\r\n            <div className=\"cardContainer\">\r\n\r\n                \r\n\r\n                    <div  className=\"card\" onClick={() => dispatch({\r\n                        type: actionTypes.TYPE,\r\n                        typeData: \"character\"\r\n                    })} >\r\n                        <div className=\"front\" >\r\n                            <h3>CHARA<span className=\"first\">C</span>TE<span className=\"first\">R</span>S</h3>\r\n                        </div>\r\n                        <div className=\"back\">\r\n                            <div>\r\n                                <p>Find and compare your favorite characters</p>  \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div  className=\"card\" onClick={() => dispatch({\r\n                        type: actionTypes.TYPE,\r\n                        typeData: \"location\"\r\n                    })} >\r\n                        <div className=\"front\" >\r\n                            <h3>L<span className=\"first\">OC</span>TIO<span className=\"first\">N</span>S</h3>\r\n                        </div>\r\n                        <div className=\"back\">\r\n                            <div>\r\n                                <p>Each one of the locations with all the related information</p>  \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div  className=\"card\" onClick={() => dispatch({\r\n                        type: actionTypes.TYPE,\r\n                        typeData: \"episode\"\r\n                    })} >\r\n                        <div className=\"front\" >\r\n                            <h3>EPI<span className=\"first\">S</span>O<span className=\"first\">D</span>ES</h3>\r\n                        </div>\r\n                        <div className=\"back\">\r\n                            <div>\r\n                                <p>Everything you need to know about each episode and its characters</p>  \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                \r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Home","import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { useStateValue } from '../core/StateProvider';\r\n//material ui\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { actionTypes } from '../core/reducer';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { styled } from '@material-ui/core/styles';\r\n\r\nfunction Snack() {\r\n\r\n  const [{ snackbar }, dispatch] = useStateValue();\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    icon: {\r\n      marginLeft: '15px'\r\n    }\r\n  }));\r\n\r\n  const MySnackbar = styled(Snackbar)({\r\n    backgroundColor: snackbar.success ? 'green' : 'red',\r\n    color: '#fff',\r\n    borderRadius: '4px',\r\n    padding: '6px 16px',\r\n    fontWeight: '400',\r\n    lineHeight: '1.43',\r\n    letterSpacing: '0.01071em',\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleClose = () => {\r\n    dispatch({\r\n      type: actionTypes.SNACKBAR,\r\n      snackbar: {\r\n        view: false,\r\n        message: '',\r\n        success: false\r\n      }\r\n\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {snackbar.view === true && (\r\n        <MySnackbar\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'center',\r\n          }}\r\n          open={snackbar.view}\r\n          onClose={handleClose}\r\n          autoHideDuration={5000}\r\n        >\r\n          <>\r\n            <p>\r\n              {snackbar.message}\r\n            </p>\r\n            <IconButton className={classes.icon} size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\r\n              <CloseIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </>\r\n        </MySnackbar>\r\n      )}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Snack","import React, { useEffect } from 'react';\r\nimport './App.css';\r\nimport { actionTypes } from './core/reducer';\r\nimport { useStateValue } from './core/StateProvider';\r\nimport NavBar from './components/NavBar';\r\nimport Character from './components/characters'\r\nimport Episode from './components/episode'\r\nimport Location from './components/location'\r\nimport Compare from './components/compare'\r\nimport EpisodeDetalle from './components/episodeDetalle';\r\nimport Home from './components/home'\r\nimport Snack from './core/snackbar';\r\nimport { apiCall, episodeData, searchApi } from './core/apiCall';\r\n\r\nfunction App() {\r\n  const [{ typeData, pageNumber, search }, dispatch] = useStateValue()\r\n\r\n  const querySearch = async () => {\r\n    await searchApi(typeData, search, pageNumber)\r\n      .then(response => {\r\n        selectDispatch(response)\r\n      })\r\n  }\r\n\r\n  const getData = async () => {\r\n\r\n    await apiCall(typeData, pageNumber)\r\n      .then(response => {\r\n        selectDispatch(response)\r\n      })\r\n  }\r\n\r\n  function getRandomEpisode(dataCharacter) {\r\n\r\n    var result = []\r\n    dataCharacter.map(async data => {\r\n\r\n      var randomEpisode = Math.floor(Math.random() * data.episode.length);\r\n      var randomResult = data.episode[randomEpisode]\r\n      const response = await episodeData(randomResult);\r\n\r\n      result.push({\r\n        ...data,\r\n        episodeRandom: response.data.name\r\n      });\r\n    })\r\n\r\n    setTimeout(() => {\r\n      dispatch({\r\n        type: actionTypes.CHARACTER,\r\n        apiData: result\r\n      })\r\n    }, 300)\r\n  }\r\n\r\n  function selectDispatch(response) {\r\n\r\n    dispatch({\r\n      type: actionTypes.TOTAL_PAGE,\r\n      totalPages: response.data.info.pages\r\n    });\r\n    switch (typeData) {\r\n      case \"character\":\r\n        getRandomEpisode(response.data.results)\r\n        break;\r\n      case \"location\":\r\n        dispatch({\r\n          type: actionTypes.LOCATION,\r\n          apiData: response.data.results\r\n        })\r\n        break;\r\n      case \"episode\":\r\n        dispatch({\r\n          type: actionTypes.EPISODE,\r\n          apiData: response.data.results\r\n        })\r\n        break;\r\n      default:\r\n        console.log(\"No typeData Selected\")\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (typeData !== \"compare\" && typeData !== \"detail\" && typeData !== \"home\") {\r\n      if (search !== \"\") {\r\n        querySearch()\r\n      } else { getData() }\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [pageNumber, search, typeData])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {typeData !== \"home\" && <NavBar />}\r\n      <Snack />\r\n      {typeData === \"character\" && <Character />}\r\n      {typeData === \"episode\" && <Episode />}\r\n      {typeData === \"location\" && <Location />}\r\n      {typeData === \"compare\" && <Compare />}\r\n      {typeData === \"detail\" && <EpisodeDetalle />}\r\n      {typeData === \"home\" && <Home />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { StateProvider } from './core/StateProvider';\r\nimport reducer, { initialState } from './core/reducer'\r\n\r\nReactDOM.render(\r\n\r\n  <StateProvider initialState={initialState} reducer={reducer}>\r\n    <App />\r\n  </StateProvider>,\r\n\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}